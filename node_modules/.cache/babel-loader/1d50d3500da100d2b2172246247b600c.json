{"ast":null,"code":"var _jsxFileName = \"/home/facundo/Project/Weather-App/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/search/Search\";\nimport axios from \"axios\";\nimport TodayCard from \"./components/todayCard/TodayCard\";\n\nconst App = () => {\n  const [actualTemp, setActualTemp] = useState([]);\n  const [forecastTemp, setForecastTemp] = useState([]);\n  const [actualCity, setActualCity] = useState(null);\n\n  const onSearch = city => {\n    axios({\n      method: \"GET\",\n      url: `http://api.weatherapi.com/v1/forecast.json?key=6bc7f8e29de0427d829180352200710&q=${city}&days=10`\n    }).then(response => {\n      setActualTemp(response.data.current);\n      setForecastTemp(response.data.forecast.forecastday);\n      setActualCity(city);\n      console.log(actualCity);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onSearch: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), actualCity ? /*#__PURE__*/React.createElement(TodayCard, {\n    actualTemp: actualTemp,\n    actualCity: actualCity,\n    forecastTemp: forecastTemp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }) : '');\n};\n\nexport default App;","map":{"version":3,"sources":["/home/facundo/Project/Weather-App/src/App.js"],"names":["React","useState","Search","axios","TodayCard","App","actualTemp","setActualTemp","forecastTemp","setForecastTemp","actualCity","setActualCity","onSearch","city","method","url","then","response","data","current","forecast","forecastday","console","log","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMW,QAAQ,GAAIC,IAAD,IAAU;AACzBV,IAAAA,KAAK,CAAC;AACJW,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAG,oFAAmFF,IAAK;AAF1F,KAAD,CAAL,CAIGG,IAJH,CAISC,QAAD,IAAc;AAClBV,MAAAA,aAAa,CAACU,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACAV,MAAAA,eAAe,CAACQ,QAAQ,CAACC,IAAT,CAAcE,QAAd,CAAuBC,WAAxB,CAAf;AACAV,MAAAA,aAAa,CAACE,IAAD,CAAb;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACD,KATH,EAUGc,KAVH,CAUUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAZH;AAaD,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEb,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEKF,UAAU,gBACH,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEJ,UAAvB;AAAmC,IAAA,UAAU,EAAEI,UAA/C;AAA2D,IAAA,YAAY,EAAEF,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAER,EAJP,CADF;AASD,CA9BD;;AAgCA,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/search/Search\";\nimport axios from \"axios\";\nimport TodayCard from \"./components/todayCard/TodayCard\";\n\nconst App = () => {\n  const [actualTemp, setActualTemp] = useState([]);\n  const [forecastTemp, setForecastTemp] = useState([]);\n  const [actualCity, setActualCity] = useState(null)\n\n  const onSearch = (city) => {\n    axios({\n      method: \"GET\",\n      url: `http://api.weatherapi.com/v1/forecast.json?key=6bc7f8e29de0427d829180352200710&q=${city}&days=10`,\n    })\n      .then((response) => {\n        setActualTemp(response.data.current);\n        setForecastTemp(response.data.forecast.forecastday);\n        setActualCity(city)\n        console.log(actualCity);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <Search onSearch={onSearch} />\n        {actualCity ? (\n                <TodayCard actualTemp={actualTemp} actualCity={actualCity} forecastTemp={forecastTemp}/>\n        ):('')}\n\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}