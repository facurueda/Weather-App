{"ast":null,"code":"import React from'react';import ForecastCard from'../forecastCard/ForecastCard';import'./TodayCard.css';var TodayCard=function TodayCard(_ref){var actualTemp=_ref.actualTemp,actualCity=_ref.actualCity,forecastTemp=_ref.forecastTemp;var DAYS=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var DAY=DAYS[new Date().getDay()];var MONTH=MONTHS[new Date().getMonth()];var NUMBER_DAY=new Date().getDate();var YEAR=new Date().getFullYear();var TEXT_CONDITION=Object.values(actualTemp.condition);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"cardDayContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cityName\"},actualCity.toUpperCase()),/*#__PURE__*/React.createElement(\"div\",{className:\"dateContainer\"},DAY,\", \",MONTH,\" \",NUMBER_DAY,\", \",YEAR),/*#__PURE__*/React.createElement(\"div\",{className:\"temperatura\"},actualTemp.temp_c,\" \\xB0C\"),/*#__PURE__*/React.createElement(\"div\",{className:\"condition\"},TEXT_CONDITION[0]),/*#__PURE__*/React.createElement(\"div\",{className:\"cardForecastContainer\"},forecastTemp.map(function(dayInfo){console.log('map',dayInfo);return/*#__PURE__*/React.createElement(ForecastCard,{dayInfo:dayInfo});}))));};export default TodayCard;","map":{"version":3,"sources":["/home/facundo/Project/Weather-App/src/components/todayCard/TodayCard.jsx"],"names":["React","ForecastCard","TodayCard","actualTemp","actualCity","forecastTemp","DAYS","MONTHS","DAY","Date","getDay","MONTH","getMonth","NUMBER_DAY","getDate","YEAR","getFullYear","TEXT_CONDITION","Object","values","condition","toUpperCase","temp_c","map","dayInfo","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAO,iBAAP,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA8C,IAA3CC,CAAAA,UAA2C,MAA3CA,UAA2C,CAA/BC,UAA+B,MAA/BA,UAA+B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAExD,GAAMC,CAAAA,IAAI,CAAG,CAAC,QAAD,CAAW,QAAX,CAAqB,SAArB,CAAgC,WAAhC,CAA6C,UAA7C,CAAyD,QAAzD,CAAmE,UAAnE,CAAb,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,UAAZ,CAAwB,OAAxB,CAAiC,OAAjC,CAA0C,KAA1C,CAAiD,MAAjD,CAAyD,MAAzD,CAAiE,QAAjE,CAA2E,WAA3E,CAAwF,SAAxF,CAAmG,UAAnG,CAA+G,UAA/G,CAAf,CAEA,GAAMC,CAAAA,GAAG,CAAGF,IAAI,CAAC,GAAIG,CAAAA,IAAJ,GAAWC,MAAX,EAAD,CAAhB,CAEA,GAAMC,CAAAA,KAAK,CAAGJ,MAAM,CAAC,GAAIE,CAAAA,IAAJ,GAAWG,QAAX,EAAD,CAApB,CAEA,GAAMC,CAAAA,UAAU,CAAG,GAAIJ,CAAAA,IAAJ,GAAWK,OAAX,EAAnB,CAEA,GAAMC,CAAAA,IAAI,CAAG,GAAIN,CAAAA,IAAJ,GAAWO,WAAX,EAAb,CAEA,GAAMC,CAAAA,cAAc,CAAGC,MAAM,CAACC,MAAP,CAAchB,UAAU,CAACiB,SAAzB,CAAvB,CAEA,mBACQ,4CACQ,2BAAK,SAAS,CAAC,kBAAf,eACQ,2BAAK,SAAS,CAAC,UAAf,EAA2BhB,UAAU,CAACiB,WAAX,EAA3B,CADR,cAEQ,2BAAK,SAAS,CAAC,eAAf,EAAgCb,GAAhC,MAAuCG,KAAvC,KAA+CE,UAA/C,MAA6DE,IAA7D,CAFR,cAGQ,2BAAK,SAAS,CAAC,aAAf,EAA8BZ,UAAU,CAACmB,MAAzC,UAHR,cAIQ,2BAAK,SAAS,CAAC,WAAf,EAA4BL,cAAc,CAAC,CAAD,CAA1C,CAJR,cAKQ,2BAAK,SAAS,CAAC,uBAAf,EACSZ,YAAY,CAACkB,GAAb,CAAiB,SAAAC,OAAO,CAAI,CACrBC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBF,OAAnB,EACA,mBACQ,oBAAC,YAAD,EAAc,OAAO,CAAEA,OAAvB,EADR,CAGP,CALA,CADT,CALR,CADR,CADR,CAkBP,CAlCD,CAoCA,cAAetB,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport ForecastCard from '../forecastCard/ForecastCard';\nimport './TodayCard.css'\n\nconst TodayCard = ({ actualTemp, actualCity, forecastTemp }) => {\n\n        const DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n        const MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        const DAY = DAYS[new Date().getDay()];\n\n        const MONTH = MONTHS[new Date().getMonth()];\n\n        const NUMBER_DAY = new Date().getDate();\n\n        const YEAR = new Date().getFullYear();\n\n        const TEXT_CONDITION = Object.values(actualTemp.condition);\n\n        return (\n                <div>\n                        <div className='cardDayContainer'>\n                                <div className=\"cityName\">{actualCity.toUpperCase()}</div>\n                                <div className=\"dateContainer\">{DAY}, {MONTH} {NUMBER_DAY}, {YEAR}</div>\n                                <div className=\"temperatura\">{actualTemp.temp_c} Â°C</div>\n                                <div className=\"condition\">{TEXT_CONDITION[0]}</div>\n                                <div className=\"cardForecastContainer\">\n                                        {forecastTemp.map(dayInfo => {\n                                                console.log('map', dayInfo)\n                                                return (\n                                                        <ForecastCard dayInfo={dayInfo} />\n                                                )\n                                        })}\n                                </div>\n                        </div>\n                </div>\n        )\n}\n\nexport default TodayCard;"]},"metadata":{},"sourceType":"module"}