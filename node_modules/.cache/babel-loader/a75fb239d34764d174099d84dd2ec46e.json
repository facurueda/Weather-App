{"ast":null,"code":"var _jsxFileName = \"/home/facundo/Project/Weather-App/src/components/forecastCard/ForecastCard.jsx\";\nimport React from 'react';\nimport './ForecastCard.css';\n\nconst ForecastCard = ({\n  dayInfo\n}) => {\n  const TEXT_CONDITION = Object.values(dayInfo.day.condition);\n  const IMG_DAY = TEXT_CONDITION[1].slice(2);\n  const MIN_TEMP = dayInfo.day.mintemp_c;\n  const MAX_TEMP = dayInfo.day.maxtemp_c;\n  const YEAR_NUMBER = dayInfo.date.slice(0, 4);\n  const MONTH_NUMBER = dayInfo.date.slice(5, 7);\n  const DAY_NUMBER = dayInfo.date.slice(8, 10);\n  const THIS_DAY = new Date().getDate(); // Function to get day of week\n\n  const getDay = (y, m, d) => {\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var d = new Date(y, --m, d);\n    return d && days[d.getDay()];\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forestCardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://${IMG_DAY}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minMaxTemp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, MIN_TEMP, \"\\xB0C  /  \", MAX_TEMP, \"\\xB0C\"), DAY_NUMBER == THIS_DAY ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textDay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }, \"Today\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textDay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }\n  }, getDay(YEAR_NUMBER, MONTH_NUMBER, DAY_NUMBER)));\n};\n\nexport default ForecastCard;","map":{"version":3,"sources":["/home/facundo/Project/Weather-App/src/components/forecastCard/ForecastCard.jsx"],"names":["React","ForecastCard","dayInfo","TEXT_CONDITION","Object","values","day","condition","IMG_DAY","slice","MIN_TEMP","mintemp_c","MAX_TEMP","maxtemp_c","YEAR_NUMBER","date","MONTH_NUMBER","DAY_NUMBER","THIS_DAY","Date","getDate","getDay","y","m","d","days"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAE9B,QAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAO,CAACI,GAAR,CAAYC,SAA1B,CAAvB;AAEA,QAAMC,OAAO,GAAGL,cAAc,CAAC,CAAD,CAAd,CAAkBM,KAAlB,CAAwB,CAAxB,CAAhB;AAEA,QAAMC,QAAQ,GAAGR,OAAO,CAACI,GAAR,CAAYK,SAA7B;AAEA,QAAMC,QAAQ,GAAGV,OAAO,CAACI,GAAR,CAAYO,SAA7B;AAEA,QAAMC,WAAW,GAAGZ,OAAO,CAACa,IAAR,CAAaN,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAApB;AAEA,QAAMO,YAAY,GAAGd,OAAO,CAACa,IAAR,CAAaN,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAArB;AAEA,QAAMQ,UAAU,GAAGf,OAAO,CAACa,IAAR,CAAaN,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAAnB;AAEA,QAAMS,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB,CAhB8B,CAkB9B;;AAEA,QAAMC,MAAM,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACpB,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EACH,WADG,EACU,UADV,EACsB,QADtB,EACgC,UADhC,CAAX;AAEA,QAAID,CAAC,GAAG,IAAIL,IAAJ,CAASG,CAAT,EAAY,EAAEC,CAAd,EAAiBC,CAAjB,CAAR;AACA,WAAOA,CAAC,IAAIC,IAAI,CAACD,CAAC,CAACH,MAAF,EAAD,CAAhB;AACP,GALD;;AAOA,sBACQ;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,GAAG,EAAG,UAASb,OAAQ,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eAEQ;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BE,QAA7B,gBAA8CE,QAA9C,UAFR,EAGUK,UAAU,IAAIC,QAAd,gBAEc;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFd,gBAIc;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BG,MAAM,CAACP,WAAD,EAAcE,YAAd,EAA4BC,UAA5B,CAAhC,CAPxB,CADR;AAaP,CAxCD;;AA0CA,eAAehB,YAAf","sourcesContent":["import React from 'react'\nimport './ForecastCard.css'\n\nconst ForecastCard = ({ dayInfo }) => {\n\n        const TEXT_CONDITION = Object.values(dayInfo.day.condition)\n\n        const IMG_DAY = TEXT_CONDITION[1].slice(2)\n\n        const MIN_TEMP = dayInfo.day.mintemp_c;\n\n        const MAX_TEMP = dayInfo.day.maxtemp_c;\n\n        const YEAR_NUMBER = dayInfo.date.slice(0, 4);\n\n        const MONTH_NUMBER = dayInfo.date.slice(5, 7);\n\n        const DAY_NUMBER = dayInfo.date.slice(8, 10);\n\n        const THIS_DAY = new Date().getDate()\n\n        // Function to get day of week\n\n        const getDay = (y, m, d) => {\n                var days = ['Sunday', 'Monday', 'Tuesday',\n                        'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n                var d = new Date(y, --m, d);\n                return d && days[d.getDay()];\n        }\n\n        return (\n                <div className='forestCardContainer'>\n                        <img src={`http://${IMG_DAY}`} />\n                        <div className=\"minMaxTemp\">{MIN_TEMP}°C  /  {MAX_TEMP}°C</div>\n                        { DAY_NUMBER == THIS_DAY ?\n                                (\n                                        <div className='textDay'>Today</div>\n                                ) : (\n                                        <div className='textDay'>{getDay(YEAR_NUMBER, MONTH_NUMBER, DAY_NUMBER)}</div>\n                                )}\n\n                </div>\n        )\n}\n\nexport default ForecastCard;"]},"metadata":{},"sourceType":"module"}